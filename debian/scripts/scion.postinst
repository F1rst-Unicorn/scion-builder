#!/usr/bin/env bash
set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# source debconf library
. /usr/share/debconf/confmodule

case "$1" in
    configure)
        # Create system user and group for scion
        id scion >/dev/null 2>&1 || adduser --system --no-create-home scion
        getent group scion >/dev/null 2>&1 || groupadd scion >/dev/null 2>&1
        usermod -g scion scion >/dev/null 2>&1

        # Create directory for logs and own it
        mkdir -p /var/log/scion/
        chown scion:scion /var/log/scion/

        # Same for gen-cache folder
        mkdir -p /var/lib/scion/
        chown -R scion:scion /var/lib/scion/

        # Same for gen folder
		mkdir -p /etc/scion/
		chown -R scion:scion /etc/scion/

        if [ ! -f /.dockerenv ]; then
			systemctl daemon-reload
        fi
        ;;
    abort-*)
        # How'd we get here??
        exit 1
    *)
        ;;
esac

# Restart services if they are running and this is an upgrade
if [ -n "$2" ] && [ "$1" = 'configure' ]; then
    systemctl restart $DPKG_MAINTSCRIPT_PACKAGE@\*.service
fi
